version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15
    container_name: super-pet-postgres
    environment:
      POSTGRES_DB: event_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - super-pet-network

  # База данных MongoDB для Task Service
  mongodb:
    image: mongo:7.0
    container_name: super-pet-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: taskdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - super-pet-network

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: super-pet-redis
    ports:
      - "6379:6379"
    networks:
      - super-pet-network

  # Kafka для обмена сообщениями
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: super-pet-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - super-pet-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: super-pet-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - super-pet-network

  # Schema Registry для Avro схем
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: super-pet-schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - super-pet-network

  # Keycloak для аутентификации
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: super-pet-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/event_platform
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - super-pet-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  super-pet-network:
    driver: bridge
