[versions]
spring-boot = "3.5.6"
postgres = "42.7.8"
junit = "6.0.0"
mapstruct = "1.6.3"
confluent = "8.0.0"
avro = "1.12.1"
spring-kafka = "3.3.10"
kotlin = "2.0.21"

[libraries]
spring-web = { module = "org.springframework.boot:spring-boot-starter-web" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
kafka-avro-serializer = { module = "io.confluent:kafka-avro-serializer", version.ref = "confluent" }
avro = { module = "org.apache.avro:avro", version.ref = "avro" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
lombok = { module = "org.projectlombok:lombok" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc" }
spring-boot-starter-quartz = { module = "org.springframework.boot:spring-boot-starter-quartz" }
spring-cloud-eureka = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test", version.ref = "spring-kafka" }
flyway = { module = "org.flywaydb:flyway-core" }
spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb" }
spring-cloud-config-server = { module = "org.springframework.cloud:spring-cloud-config-server" }
spring-cloud-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
spring-cloud-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server" }
spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dependency-management = { id = "io.spring.dependency-management", version = "1.1.6" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

[bundles]
junit = ["junit-api", "junit-engine"]
mapstruct-java = ["mapstruct", "mapstruct-processor"]
