# Task Service - Production Configuration
# Использует настройки для production окружения

# Импорт базовых шаблонов
spring:
  config:
    import:
      - optional:classpath:/templates/base-service.yml
      - optional:classpath:/templates/kafka.yml

# Специфичные настройки для Production
server:
  port: 8082

spring:
  application:
    name: task-service
  
  # MongoDB для Production
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://mongodb:27017/taskdb}
      database: ${MONGODB_DATABASE:taskdb}
      auto-index-creation: false
      write-concern: ${MONGODB_WRITE_CONCERN:ACKNOWLEDGED}
      read-preference: ${MONGODB_READ_PREFERENCE:PRIMARY}
  
  # Kafka для Production
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
    sasl:
      mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
      jaas:
        config: ${KAFKA_SASL_JAAS_CONFIG}
    consumer:
      group-id: ${KAFKA_GROUP_ID:task-service-production-group}

# Production настройки Eureka
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://discovery-server:8761/eureka/}

# Production настройки Config Server
spring:
  cloud:
    config:
      uri: ${CONFIG_SERVER_URL:http://config-server:8888}

# Production логирование
logging:
  level:
    com.home.task: ${LOG_LEVEL:INFO}
    org.springframework.data.mongodb: ${MONGODB_LOG_LEVEL:WARN}
    org.springframework.web: WARN
  file:
    name: /app/logs/task-service.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB

# Production мониторинг
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    tags:
      service: task-service
      environment: production