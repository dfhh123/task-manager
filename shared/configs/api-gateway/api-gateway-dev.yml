server:
  port: 0 # Random port for development

spring:
  application:
    name: api-gateway
  
  config:
    import: optional:configserver:http://localhost:8888
    
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user-service-auth
          uri: lb://user-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: user-service-auth
                fallbackUri: forward:/fallback/user
        - id: user-service-rest
          uri: lb://user-service
          predicates:
            - Path=/api/v1/rest/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: user-service-rest
                fallbackUri: forward:/fallback/user
        - id: task-service-kotlin
          uri: lb://task-service-kotlin
          predicates:
            - Path=/api/v1/rest/tasks/**
          filters:
            - name: CircuitBreaker
              args:
                name: task-service-kotlin
                fallbackUri: forward:/fallback/task
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - name: CircuitBreaker
              args:
                name: notification-service
                fallbackUri: forward:/fallback/notification
        - id: moderation-service
          uri: lb://moderation-service
          predicates:
            - Path=/api/v1/moderation/**
          filters:
            - name: CircuitBreaker
              args:
                name: moderation-service
                fallbackUri: forward:/fallback/moderation
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 100
            redis-rate-limiter.burstCapacity: 200
            redis-rate-limiter.requestedTokens: 1
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: 
              - "http://localhost:3000"
              - "http://localhost:3001"
              - "http://127.0.0.1:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-auth:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      user-service-rest:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      task-service-kotlin:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

# Logging configuration for development
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
    com.netflix.eureka: DEBUG
    reactor.netty: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] [%X{traceId:-},%X{spanId:-}] - %msg%n"

# Management endpoints for development
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
