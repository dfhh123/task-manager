server:
  port: 0 # Random port for development

spring:
  application:
    name: notification-service

  config:
    import: optional:configserver:http://localhost:8888

  # Kafka configuration for development
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group-dev
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
        auto.register.schemas: false
        use.latest.version: true
      enable-auto-commit: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 1

  # Mail configuration for development
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:dev-email@gmail.com}
    password: ${MAIL_PASSWORD:dev-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connection-timeout: 5000
          timeout: 5000
          write-timeout: 5000
    test-connection: false

  # Database configuration for development (if needed for audit logs)
  datasource:
    url: jdbc:h2:mem:notification-dev-db
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Application-specific configuration
notification:
  email:
    from: ${NOTIFICATION_FROM_EMAIL:noreply@eventplatform.dev}
    template-path: classpath:/templates/email/
    retry-attempts: 3
    retry-delay: 2000
  async:
    core-pool-size: 2
    max-pool-size: 5
    queue-capacity: 100

# Logging configuration for development
logging:
  level:
    com.home: DEBUG
    org.springframework.kafka: DEBUG
    org.springframework.mail: DEBUG
    org.apache.kafka: INFO
    io.confluent: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] [%X{traceId:-},%X{spanId:-}] - %msg%n"

# Management endpoints for development
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    mail:
      enabled: false # Disable mail health check in dev
