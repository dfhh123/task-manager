server:
  port: 0 # Random port for development

spring:
  application:
    name: moderation-service

  config:
    import: optional:configserver:http://localhost:8888

  # Database configuration for development
  datasource:
    url: jdbc:h2:mem:moderation-dev-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 5
      minimum-idle: 2

  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # Kafka configuration for development
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: moderation-group-dev
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
        auto.register.schemas: true
        use.latest.version: true
      enable-auto-commit: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081
        auto.register.schemas: true
        use.latest.version: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Application-specific configuration for development
moderation:
  rules:
    profanity-filter: true
    spam-detection: false # Disable for easier testing
    content-analysis: true
  ai:
    enabled: false # Disable AI moderation in dev
    api-key: "dev-key"
    model: "mock-model"
  thresholds:
    spam-score: 0.9 # Higher threshold for dev
    toxicity-score: 0.8
    manual-review-score: 0.7

# Logging configuration for development
logging:
  level:
    com.home: DEBUG
    org.springframework.kafka: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] [%X{traceId:-},%X{spanId:-}] - %msg%n"

# Management endpoints for development
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
