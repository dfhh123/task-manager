server:
  port: 8083

spring:
  application:
    name: moderation-service

  config:
    import: optional:configserver:http://config-server:8888

  # Database configuration for Docker
  datasource:
    url: jdbc:postgresql://postgres:5432/moderationdb
    username: moderation_user
    password: moderation_password
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 8
      minimum-idle: 4
      idle-timeout: 300000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  # Kafka configuration for Docker
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: moderation-group-docker
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://schema-registry:8081
        specific.avro.reader: true
        auto.register.schemas: false
        use.latest.version: true
      enable-auto-commit: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 2
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://schema-registry:8081
        auto.register.schemas: false
        use.latest.version: true

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka
  instance:
    prefer-ip-address: true
    hostname: moderation-service

# Application configuration for Docker
moderation:
  rules:
    profanity-filter: true
    spam-detection: true
    content-analysis: true
  ai:
    enabled: false
    api-key: "docker-key"
    model: "mock-model"
  thresholds:
    spam-score: 0.8
    toxicity-score: 0.7
    manual-review-score: 0.6

# Logging for Docker
logging:
  level:
    com.home: INFO
    org.springframework.kafka: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] [%X{traceId:-},%X{spanId:-}] - %msg%n"

# Management endpoints for Docker
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true 